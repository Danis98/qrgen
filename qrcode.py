from bitstream import BitStream

ERROR_CORRECTION_LEVELS=['L', 'M', 'Q', 'H']

ALIGN_PATTERN_LOC=[
    [],
    [6, 18],
    [6, 22],
    [6, 26],
    [6, 30],
    [6, 34],
    [6, 22, 38],
    [6, 24, 42],
    [6, 26, 46],
    [6, 28, 50],
    [6, 30, 54],
    [6, 32, 58],
    [6, 34, 62],
    [6, 26, 46, 66],
    [6, 26, 48, 70],
    [6, 26, 50, 74],
    [6, 30, 54, 78],
    [6, 30, 56, 82],
    [6, 30, 58, 86],
    [6, 34, 62, 90],
    [6, 28, 50, 72, 94],
    [6, 26, 50, 74, 98],
    [6, 30, 54, 78, 102],
    [6, 28, 54, 80, 106],
    [6, 32, 58, 84, 110],
    [6, 30, 58, 86, 114],
    [6, 34, 62, 90, 118],
    [6, 26, 50, 74, 98, 122],
    [6, 30, 54, 78, 102, 126],
    [6, 26, 52, 78, 104, 130],
    [6, 30, 56, 82, 108, 134],
    [6, 34, 60, 86, 112, 138],
    [6, 30, 58, 86, 114, 142],
    [6, 34, 62, 90, 118, 146],
    [6, 30, 54, 78, 102, 126, 150],
    [6, 24, 50, 76, 102, 128, 154],
    [6, 28, 54, 80, 106, 132, 158],
    [6, 32, 58, 84, 110, 136, 162],
    [6, 26, 54, 82, 110, 138, 166],
    [6, 30, 58, 86, 114, 142, 170]
]

EC_CODEWORDS_PER_BLOCK=[
    [7, 10, 13, 17],
    [10, 16, 22, 28],
    [15, 26, 18, 22],
    [20, 18, 26, 16],
    [26, 24, 18, 22],
    [18, 16, 24, 28],
    [20, 18, 18, 26],
    [24, 22, 22, 26],
    [30, 22, 20, 24],
    [18, 26, 24, 28],
    [20, 30, 28, 24],
    [24, 22, 26, 28],
    [26, 22, 24, 22],
    [30, 24, 20, 24],
    [22, 24, 30, 24],
    [24, 28, 24, 30],
    [28, 28, 28, 28],
    [30, 26, 28, 28],
    [28, 26, 26, 26],
    [28, 26, 30, 28],
    [28, 26, 28, 30],
    [28, 28, 30, 24],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [26, 28, 30, 30],
    [28, 28, 28, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30],
    [30, 28, 30, 30]
]

BLOCKS_PER_GROUP=[
    [[1, 0], [1, 0], [1, 0], [1, 0]],
    [[1, 0], [1, 0], [1, 0], [1, 0]],
    [[1, 0], [1, 0], [2, 0], [2, 0]],
    [[1, 0], [2, 0], [2, 0], [4, 0]],
    [[1, 0], [2, 0], [2, 2], [2, 2]],
    [[2, 0], [4, 0], [4, 0], [4, 0]],
    [[2, 0], [4, 0], [2, 4], [4, 1]],
    [[2, 0], [2, 2], [4, 2], [4, 2]],
    [[2, 0], [3, 2], [4, 4], [4, 4]],
    [[2, 2], [4, 1], [6, 2], [6, 2]],
    [[4, 0], [1, 4], [4, 4], [3, 8]],
    [[2, 2], [6, 2], [4, 6], [7, 4]],
    [[4, 0], [8, 1], [8, 4], [12, 4]],
    [[3, 1], [4, 5], [11, 5], [11, 5]],
    [[5, 1], [5, 5], [5, 7], [11, 7]],
    [[5, 1], [7, 3], [15, 2], [3, 13]],
    [[1, 5], [10, 1], [1, 15], [2, 17]],
    [[5, 1], [9, 4], [17, 1], [2, 19]],
    [[3, 4], [3, 11], [17, 4], [9, 16]],
    [[3, 5], [3, 13], [15, 5], [15, 10]],
    [[4, 4], [17, 0], [17, 6], [19, 6]],
    [[2, 7], [17, 0], [7, 16], [34, 0]],
    [[4, 5], [4, 14], [11, 14], [16, 14]],
    [[6, 4], [6, 14], [11, 16], [30, 2]],
    [[8, 4], [8, 13], [7, 22], [22, 13]],
    [[10, 2], [19, 4], [28, 6], [33, 4]],
    [[8, 4], [22, 3], [8, 26], [12, 28]],
    [[3, 10], [3, 23], [4, 31], [11, 31]],
    [[7, 7], [21, 7], [1, 37], [19, 26]],
    [[5, 10], [19, 10], [15, 25], [23, 25]],
    [[13, 3], [2, 29], [42, 1], [23, 28]],
    [[17, ], [10, 23], [10, 35], [19, 35]],
    [[17, 1], [14, 21], [29, 19], [11, 46]],
    [[13, 6], [14, 23], [44, 7], [59, 1]],
    [[12, 7], [12, 26], [39, 14], [22, 41]],
    [[6, 14], [6, 34], [46, 10], [2, 64]],
    [[17, 4], [29, 14], [49, 10], [24, 46]],
    [[4, 18], [13, 32], [48, 14], [42, 32]],
    [[20, 4], [40, 7], [43, 22], [10, 67]],
    [[19, 6], [18, 31], [34, 34], [20, 61]]
]

"""also has Kanji lengths, but don't be fooled, ain't happening"""
CHARS_PER_ENCODING=[
    {'L': [41, 25, 17, 10], 'M': [34, 20, 14, 8], 'Q': [27, 16, 11, 7], 'H': [17, 10, 7, 4]},
    {'L': [77, 47, 32, 20], 'M': [63, 38, 26, 16], 'Q': [48, 29, 20, 12], 'H': [34, 20, 14, 8]},
    {'L': [127, 77, 53, 32], 'M': [101, 61, 42, 26], 'Q': [77, 47, 32, 20], 'H': [58, 35, 24, 15]},
    {'L': [187, 114, 78, 48], 'M': [149, 90, 62, 38], 'Q': [111, 67, 46, 28], 'H': [82, 50, 34, 21]},
    {'L': [255, 154, 106, 65], 'M': [202, 122, 84, 52], 'Q': [144, 87, 60, 37], 'H': [106, 64, 44, 27]},
    {'L': [322, 195, 134, 82], 'M': [255, 154, 106, 65], 'Q': [178, 108, 74, 45], 'H': [139, 84, 58, 36]},
    {'L': [370, 224, 154, 95], 'M': [293, 178, 122, 75], 'Q': [207, 125, 86, 53], 'H': [154, 93, 64, 39]},
    {'L': [461, 279, 192, 118], 'M': [365, 221, 152, 93], 'Q': [259, 157, 108, 66], 'H': [202, 122, 84, 52]},
    {'L': [552, 335, 230, 141], 'M': [432, 262, 180, 111], 'Q': [312, 189, 130, 80], 'H': [235, 143, 98, 60]},
    {'L': [652, 395, 271, 167], 'M': [513, 311, 213, 131], 'Q': [364, 221, 151, 93], 'H': [288, 174, 119, 74]},
    {'L': [772, 468, 321, 198], 'M': [604, 366, 251, 155], 'Q': [427, 259, 177, 109], 'H': [331, 200, 137, 85]},
    {'L': [883, 535, 367, 226], 'M': [691, 419, 287, 177], 'Q': [489, 296, 203, 125], 'H': [374, 227, 155, 96]},
    {'L': [1022, 619, 425, 262], 'M': [796, 483, 331, 204], 'Q': [580, 352, 241, 149], 'H': [427, 259, 177, 109]},
    {'L': [1101, 667, 458, 282], 'M': [871, 528, 362, 223], 'Q': [621, 376, 258, 159], 'H': [468, 283, 194, 120]},
    {'L': [1250, 758, 520, 320], 'M': [991, 600, 412, 254], 'Q': [703, 426, 292, 180], 'H': [530, 321, 220, 136]},
    {'L': [1408, 854, 586, 361], 'M': [1082, 656, 450, 277], 'Q': [775, 470, 322, 198], 'H': [602, 365, 250, 154]},
    {'L': [1548, 938, 644, 397], 'M': [1212, 734, 504, 310], 'Q': [876, 531, 364, 224], 'H': [674, 408, 280, 173]},
    {'L': [1725, 1046, 718, 442], 'M': [1346, 816, 560, 345], 'Q': [948, 574, 394, 243], 'H': [746, 452, 310, 191]},
    {'L': [1903, 1153, 792, 488], 'M': [1500, 909, 624, 384], 'Q': [1063, 644, 442, 272], 'H': [813, 493, 338, 208]},
    {'L': [2061, 1249, 858, 528], 'M': [1600, 970, 666, 410], 'Q': [1159, 702, 482, 297], 'H': [919, 557, 382, 235]},
    {'L': [2232, 1352, 929, 572], 'M': [1708, 1035, 711, 438], 'Q': [1224, 742, 509, 314], 'H': [969, 587, 403, 248]},
    {'L': [2409, 1460, 1003, 618], 'M': [1872, 1134, 779, 480], 'Q': [1358, 823, 565, 348], 'H': [1056, 640, 439, 270]},
    {'L': [2620, 1588, 1091, 672], 'M': [2059, 1248, 857, 528], 'Q': [1468, 890, 611, 376], 'H': [1108, 672, 461, 284]},
    {'L': [2812, 1704, 1171, 721], 'M': [2188, 1326, 911, 561], 'Q': [1588, 963, 661, 407], 'H': [1228, 744, 511, 315]},
    {'L': [3057, 1853, 1273, 784], 'M': [2395, 1451, 997, 614], 'Q': [1718, 1041, 715, 440], 'H': [1286, 779, 535, 330]},
    {'L': [3283, 1990, 1367, 842], 'M': [2544, 1542, 1059, 652], 'Q': [1804, 1094, 751, 462], 'H': [1425, 864, 593, 365]},
    {'L': [3517, 2132, 1465, 902], 'M': [2701, 1637, 1125, 692], 'Q': [1933, 1172, 805, 496], 'H': [1501, 910, 625, 385]},
    {'L': [3669, 2223, 1528, 940], 'M': [2857, 1732, 1190, 732], 'Q': [2085, 1263, 868, 534], 'H': [1581, 958, 658, 405]},
    {'L': [3909, 2369, 1628, 1002], 'M': [3035, 1839, 1264, 778], 'Q': [2181, 1322, 908, 559], 'H': [1677, 1016, 698, 430]},
    {'L': [4158, 2520, 1732, 1066], 'M': [3289, 1994, 1370, 843], 'Q': [2358, 1429, 982, 604], 'H': [1782, 1080, 742, 457]},
    {'L': [4417, 2677, 1840, 1132], 'M': [3486, 2113, 1452, 894], 'Q': [2473, 1499, 1030, 634], 'H': [1897, 1150, 790, 486]},
    {'L': [4686, 2840, 1952, 1201], 'M': [3693, 2238, 1538, 947], 'Q': [2670, 1618, 1112, 684], 'H': [2022, 1226, 842, 518]},
    {'L': [4965, 3009, 2068, 1273], 'M': [3909, 2369, 1628, 1002], 'Q': [2805, 1700, 1168, 719], 'H': [2157, 1307, 898, 553]},
    {'L': [5253, 3183, 2188, 1347], 'M': [4134, 2506, 1722, 1060], 'Q': [2949, 1787, 1228, 756], 'H': [2301, 1394, 958, 590]},
    {'L': [5529, 3351, 2303, 1417], 'M': [4343, 2632, 1809, 1113], 'Q': [3081, 1867, 1283, 790], 'H': [2361, 1431, 983, 605]},
    {'L': [5836, 3537, 2431, 1496], 'M': [4588, 2780, 1911, 1176], 'Q': [3244, 1966, 1351, 832], 'H': [2524, 1530, 1051, 647]},
    {'L': [6153, 3729, 2563, 1577], 'M': [4775, 2894, 1989, 1224], 'Q': [3417, 2071, 1423, 876], 'H': [2625, 1591, 1093, 673]},
    {'L': [6479, 3927, 2699, 1661], 'M': [5039, 3054, 2099, 1292], 'Q': [3599, 2181, 1499, 923], 'H': [2735, 1658, 1139, 701]},
    {'L': [6743, 4087, 2809, 1729], 'M': [5313, 3220, 2213, 1362], 'Q': [3791, 2298, 1579, 972], 'H': [2927, 1774, 1219, 750]},
    {'L': [7089, 4296, 2953, 1817], 'M': [5596, 3391, 2331, 1435], 'Q': [3993, 2420, 1663, 1024], 'H': [3057, 1852, 1273, 784]}
]

CHAR_COUNT_LEN=[
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [10, 9, 8, 8],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [12, 11, 16, 10],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
    [14, 13, 16, 12],
]

"""WARNING: Kanji not supported"""
ENC_NUM=1       #0001
ENC_ALPHANUM=2  #0010
ENC_BYTE=4      #0100
ENC_KANJI=8     #1000

enc_to_index={
    1: 0,
    2: 1,
    4: 2
}

def get_qr_size(version):
    return 4*(version-1)+21

def get_data_limit(version, encoding, error):
    return CHARS_PER_ENCODING[version-1][error][enc_to_index[encoding]]

def generate_character_count_indicator(length):
    

class QRCode:
    DATA=u""
    ENC_DATA=None
    CHAR_INDICATOR=None
    VERSION=None
    ERROR_LEVEL=None
    ENCODING=None
    MASK=None
